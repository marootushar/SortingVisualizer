{"version":3,"sources":["SortingAlgorithms/MergeSort.js","SortingAlgorithms/QuickSort.js","SortingAlgorithms/BubbleSort.js","SortingAlgorithms/SelectionSort.js","SortingAlgorithms/InsertionSort.js","components/SortingVisualizer.js","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["mergeSort","realArray","start","end","auxArray","animations","mid","Math","floor","doMerge","k","i","j","push","quickSort","array","pivotIdx","pivot","r","temp","bubbleSort","length","selectionSort","small","smallIdx","insertionSort","idx","COL2","SortingVisualizer","useState","setArray","disable","setDisable","useEffect","resetArray","arr","x","random","sendAlert","alert","slice","mergeSortAnimations","arrayBars","document","getElementsByClassName","b1Idx","b2Idx","b1Style","style","b2Style","color","setTimeout","backgroundColor","newHeight","height","quickSortAnimations","animate","bubbleSortAnimations","insertionSortAnimations","selectionSortAnimations","colChoice","b1Height","b2Height","className","onClick","window","location","reload","map","value","Navbar","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c3f25119.chunk.js","sourcesContent":["export const mergeSortAnimations = (array) => {\n  const animations = [];\n  if (array.length === 1) return array;\n  const auxArray = array.slice();\n  mergeSort(array, 0, array.length - 1, auxArray, animations);\n  return animations;\n};\n\nconst mergeSort = (realArray, start, end, auxArray, animations) => {\n  if (start === end) return;\n  const mid = Math.floor((start + end) / 2);\n  mergeSort(auxArray, start, mid, realArray, animations);\n  mergeSort(auxArray, mid + 1, end, realArray, animations);\n  doMerge(realArray, start, mid, end, auxArray, animations);\n};\n\nconst doMerge = (realArray, start, mid, end, auxArray, animations) => {\n  let k = start;\n  let i = start;\n  let j = mid + 1;\n  while (i <= mid && j <= end) {\n    animations.push([i, j]);\n    animations.push([i, j]);\n    if (auxArray[i] <= auxArray[j]) {\n      animations.push([k, auxArray[i]]);\n      realArray[k++] = auxArray[i++];\n    } else {\n      animations.push([k, auxArray[j]]);\n      realArray[k++] = auxArray[j++];\n    }\n  }\n  while (i <= mid) {\n    animations.push([i, i]);\n    animations.push([i, i]);\n    animations.push([k, auxArray[i]]);\n    realArray[k++] = auxArray[i++];\n  }\n  while (j <= end) {\n    animations.push([j, j]);\n    animations.push([j, j]);\n    animations.push([k, auxArray[j]]);\n    realArray[k++] = auxArray[j++];\n  }\n};\n","export const quickSortAnimations = (array) => {\n  const animations = [];\n  if (array.length === 1) return array;\n  quickSort(array, 0, array.length - 1, animations);\n  return animations;\n};\n\nconst quickSort = (array, start, end, animations) => {\n  if (start < end) {\n    let pivotIdx = start;\n    const pivot = array[end];\n    for (let i = start; i < end; i++) {\n      animations.push([i, pivotIdx, 1]);\n      const r = pivotIdx;\n      if (array[i] <= pivot) {\n        animations.push([i, array[pivotIdx], pivotIdx, array[i]]);\n        var temp = array[pivotIdx];\n        array[pivotIdx] = array[i];\n        array[i] = temp;\n        pivotIdx++;\n      }\n      animations.push([i, r, 0]);\n    }\n    animations.push([end, pivotIdx]);\n    animations.push([end, array[pivotIdx], pivotIdx, array[end]]);\n    animations.push([end, pivotIdx]);\n    temp = array[pivotIdx];\n    array[pivotIdx] = array[end];\n    array[end] = temp;\n    quickSort(array, start, pivotIdx - 1, animations);\n    quickSort(array, pivotIdx + 1, end, animations);\n  } else return;\n};\n","export const bubbleSortAnimations = (array) => {\n  const animations = [];\n  if (array.length === 1) return array;\n  bubbleSort(array, animations);\n  return animations;\n};\n\nconst bubbleSort = (array,animations) => {\n  for (var i = 0; i < array.length - 1; i++) {\n    for (var j = 0; j < array.length - i - 1; j++) {\n      animations.push([j,j+1,1]);\n      if (array[j] > array[j + 1]) {\n        animations.push([j,array[j+1],j+1,array[j]]);\n        var temp = array[j];\n        array[j] = array[j + 1];\n        array[j + 1] = temp;\n      }\n      animations.push([j,j+1,0]);\n    }\n  }\n};\n","export const selectionSortAnimations = (array) => {\n  const animations = [];\n  if (array.length === 1) return array;\n  selectionSort(array, animations);\n  return animations;\n};\n\nconst selectionSort = (array, animations) => {\n  for (let i = 0; i < array.length; i++) {\n    var small = array[i];\n    var smallIdx = i;\n    for (let j = i + 1; j < array.length; j++) {\n      animations.push([j,smallIdx,1]);\n      animations.push([j,smallIdx,0]);\n      if (array[j] < small) {\n        small = array[j];\n        smallIdx = j;\n      }\n    }\n    animations.push([i,smallIdx,1]);\n    animations.push([i,array[smallIdx],smallIdx,array[i]]);\n    animations.push([i,smallIdx,0]);\n    array[smallIdx] = array[i];\n    array[i] = small;\n  }\n};\n","export const insertionSortAnimations = (array) => {\n  const animations = [];\n  if (array.length === 1) return array;\n  insertionSort(array, animations);\n  return animations;\n};\n\nconst insertionSort = (array, animations) => {\n  for (let i = 1; i < array.length; i++) {\n    let idx = i;\n    for (let j = i - 1; j >= 0; j--) {\n      if (array[j] > array[idx]) {\n        animations.push([idx,j,1]);\n        animations.push([idx,array[j],j,array[idx]]);\n        animations.push([idx,j,0]);\n        var temp = array[idx];\n        array[idx] = array[j];\n        array[j] = temp;\n        idx = j;\n      }\n    }\n  }\n};\n\n","import React, { useState, useEffect } from 'react';\nimport './SortingVisualizer.css';\nimport { mergeSortAnimations } from '../SortingAlgorithms/MergeSort';\nimport { quickSortAnimations } from '../SortingAlgorithms/QuickSort';\nimport { bubbleSortAnimations } from '../SortingAlgorithms/BubbleSort';\nimport { selectionSortAnimations } from '../SortingAlgorithms/SelectionSort';\nimport { insertionSortAnimations } from '../SortingAlgorithms/InsertionSort';\n\nconst ARR_SIZE = 150;\nconst COL1 = 'red';\nconst COL2 = '#fff';\nconst ANIMATION_SPEED = 5;\n\nconst SortingVisualizer = () => {\n  const [array, setArray] = useState([]);\n  const [disable, setDisable] = useState(false);\n\n  useEffect(() => {\n    resetArray();\n  }, []);\n\n  const resetArray = () => {\n    const arr = [];\n    for (var i = 0; i < ARR_SIZE; i++) {\n      var x = Math.floor(Math.random() * 750 + 5);\n      arr.push(x);\n    }\n    setArray(arr);\n  };\n\n  const sendAlert = () => {\n    alert(\n      'A sorting algorithm is already running! Press refresh button to stop.'\n    );\n  };\n\n  const mergeSort = () => {\n    setDisable(true);\n    const auxArray = array.slice();\n    const animations = mergeSortAnimations(auxArray);\n    const arrayBars = document.getElementsByClassName('arrayBar');\n    for (let i = 0; i < animations.length; i++) {\n      const changeColor = i % 3 !== 2;\n      if (changeColor) {\n        const [b1Idx, b2Idx] = animations[i];\n        const b1Style = arrayBars[b1Idx].style;\n        const b2Style = arrayBars[b2Idx].style;\n        const color = i % 3 === 0 ? COL1 : COL2;\n        setTimeout(() => {\n          b1Style.backgroundColor = color;\n          b2Style.backgroundColor = color;\n        }, i * ANIMATION_SPEED);\n      } else {\n        setTimeout(() => {\n          const [b1Idx, newHeight] = animations[i];\n          const b1Style = arrayBars[b1Idx].style;\n          b1Style.height = `${newHeight}px`;\n        }, i * ANIMATION_SPEED);\n      }\n    }\n    setTimeout(() => {\n      setArray(auxArray);\n      setDisable(false);\n    }, animations.length * ANIMATION_SPEED);\n  };\n\n  const quickSort = () => {\n    const auxArray = array.slice();\n    const animations = quickSortAnimations(auxArray);\n    animate(animations, auxArray);\n  };\n\n  // const heapSort = () => {};\n\n  const bubbleSort = () => {\n    const auxArray = array.slice();\n    const animations = bubbleSortAnimations(auxArray);\n    animate(animations, auxArray);\n  };\n\n  const insertionSort = () => {\n    const auxArray = array.slice();\n    const animations = insertionSortAnimations(auxArray);\n    animate(animations, auxArray);\n  };\n\n  const selectionSort = () => {\n    const auxArray = array.slice();\n    const animations = selectionSortAnimations(auxArray);\n    animate(animations, auxArray);\n  };\n\n  const animate = (animations, auxArray) => {\n    setDisable(true);\n    const arrayBars = document.getElementsByClassName('arrayBar');\n    for (let i = 0; i < animations.length; i++) {\n      if (animations[i].length === 3) {\n        const [b1Idx, b2Idx, colChoice] = animations[i];\n        const b1Style = arrayBars[b1Idx].style;\n        const b2Style = arrayBars[b2Idx].style;\n        const color = colChoice ? COL1 : COL2;\n        setTimeout(() => {\n          b1Style.backgroundColor = color;\n          b2Style.backgroundColor = color;\n        }, i * ANIMATION_SPEED);\n      } else if (animations[i].length === 4) {\n        setTimeout(() => {\n          const [b1Idx, b1Height, b2Idx, b2Height] = animations[i];\n          const b1Style = arrayBars[b1Idx].style;\n          b1Style.height = `${b1Height}px`;\n          const b2Style = arrayBars[b2Idx].style;\n          b2Style.height = `${b2Height}px`;\n        }, i * ANIMATION_SPEED);\n      }\n    }\n    setTimeout(() => {\n      setArray(auxArray);\n      setDisable(false);\n    }, animations.length * ANIMATION_SPEED);\n  };\n\n  // const test = () => {\n  //   for (var i = 0; i < 1000; i++) {\n  //     quickSort();\n  //   }\n  // };\n  // const arraysEqual = (a, b) => {\n  //   if (a === b) return true;\n  //   if (a == null || b == null) return false;\n  //   if (a.length !== b.length) return false;\n  //   for (var i = 0; i < a.length; ++i) {\n  //     if (a[i] !== b[i]) return false;\n  //   }\n  //   return true;\n  // };\n\n  return (\n    <>\n      <div className='buttonsContainer'>\n        <button\n          onClick={() => {\n            if (!disable) resetArray();\n            else sendAlert();\n          }}\n          className='newArray'\n        >\n          Generate New Array\n        </button>\n        <button\n          onClick={() => {\n            if (!disable) mergeSort();\n            else sendAlert();\n          }}\n          className='newArray'\n        >\n          Merge Sort\n        </button>\n        <button\n          onClick={() => {\n            if (!disable) quickSort();\n            else sendAlert();\n          }}\n          className='newArray'\n        >\n          Quick Sort\n        </button>\n        {/* <button\n          onClick={() => {\n            if (!disable) heapSort();\n            else sendAlert();\n          }}\n          className='newArray'\n        >\n          Heap Sort\n        </button> */}\n        <button\n          onClick={() => {\n            if (!disable) bubbleSort();\n            else sendAlert();\n          }}\n          className='newArray'\n        >\n          Bubble Sort\n        </button>\n        <button\n          onClick={() => {\n            if (!disable) insertionSort();\n            else sendAlert();\n          }}\n          className='newArray'\n        >\n          Insertion Sort\n        </button>\n        <button\n          onClick={() => {\n            if (!disable) selectionSort();\n            else sendAlert();\n          }}\n          className='newArray'\n        >\n          Selection Sort\n        </button>\n        <button onClick={() => window.location.reload()}>Refresh</button>\n        {/* <button onClick={() => test()} className='newArray'>\n          Test\n        </button> */}\n      </div>\n      <div className='arrayContainer'>\n        {array.map((value, idx) => (\n          <div\n            className='arrayBar'\n            key={idx}\n            style={{ height: `${value}px` }}\n          ></div>\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default SortingVisualizer;\n","import React from \"react\";\nimport \"./Navbar.css\"\n\nconst Navbar = () => {\n  return(\n    <div>\n      <h1>Sorting Visualizer</h1>\n    </div>\n  );\n}\n\nexport default Navbar;","import React from \"react\";\nimport SortingVisualizer from \"./components/SortingVisualizer.js\"\nimport Navbar from \"./components/Navbar\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar>\n      </Navbar>\n      <SortingVisualizer>\n      </SortingVisualizer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}